import React from "react";
import './Resume.css'
import { FaGithub, FaLinkedin, FaPhone, FaEnvelope } from "react-icons/fa";
import { toPng } from "html-to-image";
import { jsPDF } from "jspdf";
import { useRef } from "react";
import { useReactToPrint } from "react-to-print";

const Resume = ({ data }) => {
  const resumeRef = useRef(null);

  //! 55mb ->70kb
  const handleDownloadPdf = () => {
  toPng(resumeRef.current, {
    quality: 0.95,
    scale: 2,
    pixelRatio: 1.5,
    width: resumeRef.current.offsetWidth * 2,
    height: resumeRef.current.offsetHeight * 2,
    filter: (node) => {

      const exclusionClasses = ['exclude-from-pdf'];
      return !node.classList || !exclusionClasses.some(classname => 
        node.classList.contains(classname)
      );
    }
  })
  .then((dataUrl) => {
    const pdf = new jsPDF({
      orientation: "portrait",
      unit: "mm",
      format: "a4",
      compress: true // Enable compression
    });
    const imgProps = pdf.getImageProperties(dataUrl);
    const pdfWidth = pdf.internal.pageSize.getWidth();
    const pdfHeight = (imgProps.height * pdfWidth) / imgProps.width;
    pdf.addImage(dataUrl, "PNG", 0, 0, pdfWidth, pdfHeight, '', 'FAST');
    pdf.save(`${data.personalInformation.fullName}.pdf`);
  })
  .catch((err) => {
    console.error("Error generating PDF", err);
  });
};
return (
  <div className="w-full flex justify-center bg-gray-100 py-10">
    <div className="w-[800px] bg-white shadow-lg rounded-lg overflow-hidden flex">
      {/* Sidebar */}
      <div className="w-1/3 bg-gray-800 text-white p-6">
        <div className="text-center mb-6">
          <h1 className="text-2xl font-bold">{data.personalInformation.fullName}</h1>
          <p className="text-gray-400">{data.personalInformation.location}</p>
        </div>

        <div className="space-y-4">
          <p className="flex items-center text-gray-300">
            <FaEnvelope className="mr-2" /> {data.personalInformation.email || "N/A"}
          </p>
          <p className="flex items-center text-gray-300">
            <FaPhone className="mr-2" /> {data.personalInformation.phoneNumber || "N/A"}
          </p>
          <a
            href={data.personalInformation.gitHub || "#"}
            target="_blank"
            rel="noopener noreferrer"
            className="flex items-center text-gray-300 hover:text-white"
          >
            <FaGithub className="mr-2" /> GitHub
          </a>
          <a
            href={data.personalInformation.linkedIn || "#"}
            target="_blank"
            rel="noopener noreferrer"
            className="flex items-center text-gray-300 hover:text-white"
          >
            <FaLinkedin className="mr-2" /> LinkedIn
          </a>
        </div>

        <div className="mt-6">
          <h2 className="text-lg font-semibold border-b border-gray-600 pb-2">Skills</h2>
          <ul className="mt-2 space-y-1 text-gray-300">
            {data.skills.length > 0 ? (
              data.skills.map((skill, index) => (
                <li key={index} className="text-sm">{skill.title} - {skill.level}</li>
              ))
            ) : (
              <li className="text-sm">No skills listed</li>
            )}
          </ul>
        </div>
      </div>

      {/* Main Content */}
      <div className="w-2/3 p-6">
        <section>
          <h2 className="text-xl font-bold border-b pb-2">Summary</h2>
          <p className="text-gray-700 mt-2">{data.summary || "No summary available."}</p>
        </section>

        <section className="mt-6">
          <h2 className="text-xl font-bold border-b pb-2">Experience</h2>
          {data.experience.length > 0 ? (
            data.experience.map((exp, index) => (
              <div key={index} className="mt-4">
                <h3 className="text-lg font-semibold">{exp.jobTitle}</h3>
                <p className="text-gray-500">{exp.company} | {exp.location}</p>
                <p className="text-gray-400 text-sm">{exp.duration}</p>
                <p className="text-gray-600 mt-2">{exp.responsibility}</p>
              </div>
            ))
          ) : (
            <p className="text-gray-500">No experience listed.</p>
          )}
        </section>

        <section className="mt-6">
          <h2 className="text-xl font-bold border-b pb-2">Education</h2>
          {data.education.length > 0 ? (
            data.education.map((edu, index) => (
              <div key={index} className="mt-4">
                <h3 className="text-lg font-semibold">{edu.degree}</h3>
                <p className="text-gray-500">{edu.university}, {edu.location}</p>
                <p className="text-gray-400 text-sm">ðŸŽ“ Graduation Year: {edu.graduationYear}</p>
              </div>
            ))
          ) : (
            <p className="text-gray-500">No education details available.</p>
          )}
        </section>

        <section className="mt-6">
          <h2 className="text-xl font-bold border-b pb-2">Projects</h2>
          {data.projects.length > 0 ? (
            data.projects.map((proj, index) => (
              <div key={index} className="mt-4">
                <h3 className="text-lg font-semibold">{proj.title}</h3>
                <p className="text-gray-600">{proj.description}</p>
                {/* This particular fucking section why does this always tweaks  so much */}
                <p className="text-gray-500">Technologies: {Array.isArray(proj.technologiesUsed) ? proj.technologiesUsed.join(", ") : String(proj.technologiesUsed || "N/A")}</p>
                {proj.githubLink && (
                  <a
                    href={proj.githubLink}
                    target="_blank"
                    rel="noopener noreferrer"
                    className="text-blue-500 hover:underline"
                  >
                    ðŸ”— GitHub Link
                  </a>
                )}
              </div>
            ))
          ) : (
            <p className="text-gray-500">No projects listed.</p>
          )}
        </section>
      </div>
    </div>
  </div>
);
};

export default Resume;